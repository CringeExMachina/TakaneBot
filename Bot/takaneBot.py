import requests,os


import logging


from dotenv import load_dotenv


from aiogram import Bot,Dispatcher,executor,types


from aiogram.types import ReplyKeyboardMarkup,KeyboardButton


logging.debug('–æ—Ç–ª–∞–¥–∫–∞')
logging.info('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
logging.warning('–ù–µ –æ–∫')
logging.error('–ö—Ä–∏–Ω–∂–∞–Ω—É–ª')
logging.critical('–û–ø–∞–Ω—å–∫–∏,–ø—Ä–∏–µ—Ö–∞–ª–∏!')

logging.basicConfig(
    level=logging.INFO,
    filename='main.log',
    filemode='w',
    format='%(asctime)s, %(levelname)s, %(message)s, %(name)s'
)

load_dotenv()
TOKEN = os.getenv('TOKEN')
API = os.getenv('API')
API_POST = os.getenv('API_POST')
KEY = os.getenv('KEY')

bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)

button1=KeyboardButton('–û—Ç–ø—Ä–∞–≤—å –∫–∏—Ç—é! üòΩ')
ReplyKeyboard=ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True).add(button1)
button2=KeyboardButton('–ö—Ä–∞—Å–æ—Ç—É–ª—èüòò',callback_data='+')
button3=KeyboardButton('–ö—Ä–∏–Ω–∂—É–ª—èüòà',callback_data='-')
RatingKeyboard=ReplyKeyboardMarkup(row_width=2,resize_keyboard=True).add(button2,button3,button1)



@dp.message_handler(commands=['start'])
async def start(message:types.Message):
  username = message.from_user.username
  user_fullname= message.from_user.full_name
  if user_fullname != 'None':
      await message.answer(f'Hi, {user_fullname}!',reply_markup=ReplyKeyboard)
  else: await message.answer(f'Hi, {username}!',reply_markup=ReplyKeyboard)
  
  

@dp.message_handler()
async def send_kitty(message: types.Message):
    context={'–û—Ç–ø—Ä–∞–≤—å –∫–∏—Ç—é! üòΩ','–ö—Ä–∞—Å–æ—Ç—É–ª—èüòò','–ö—Ä–∏–Ω–∂—É–ª—èüòà'}
    if message.text in context:
        response = requests.get(API).json()
        kitty = response[0].get('url')
        kitty_id = response[0].get('id')
        
        try:
            if message.text == '–û—Ç–ø—Ä–∞–≤—å –∫–∏—Ç—é! üòΩ':
                
                await message.answer('–í–∞–Ω –º–∏–Ω—É—Ç...')
                chat_id=message.from_user.id
                await bot.send_photo(chat_id=chat_id,photo=kitty,reply_markup=RatingKeyboard) 
            else: await rating_kitty(message.text,kitty_id)
                
        except: await message.answer('–í—Å–µ –∫–∏—Å—ã —Ä–∞–∑–±–µ–∂–∞–ª–∏—Å—å üòì')


async def rating_kitty(rating,id):
    if rating == '–ö—Ä–∞—Å–æ—Ç—É–ª—èüòò':
       requests.post(API_POST,{'x-api-key':KEY,'image_id':id,'value':'10'})
    else: requests.post(API_POST,{'x-api-key':KEY,'image_id':id,'value':'-10'})


       


if __name__ == '__main__':
    executor.start_polling(dp)

